"use client";

import React, { useState, useEffect, useRef } from "react";
import { SunVisualization } from "./components/SunVisualization";
import { SungazingTimer } from "./components/SungazingTimer";
import { CloudGazingTimer } from "./components/CloudGazingTimer";
import { SolarWindow } from "./components/SolarWindow";
import { NightMode } from "./components/NightMode";
import { OnboardingScreen } from "./components/OnboardingScreen";
import { ProfileScreen } from "./components/ProfileScreen";
import { RitualTimer } from "./components/RitualTimer";
import { PalmingRitual } from "./components/PalmingRitual";
import { PostGazeRitual } from "./components/PostGazeRitual";
import { TruthScrollsNew } from "./components/TruthScrollsNew";
import { SolarJournal } from "./components/SolarJournal";
import CandleGazingMode from "./components/ritual-modes/CandleGazingMode";
// import { SungazingGuide } from "./components/SungazingGuide";
// import { SolarContentViewer } from "./components/SolarContentViewer";
// import { UnlocksScreen } from "./components/UnlocksScreen";
import { Button } from "./components/ui/button";
import { PaywallModal } from "./components/PaywallModal";
import { EnhancedSolarLevelCard } from "./components/EnhancedSolarLevelCard";
import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from "./components/ui/tabs";
import { Home, Sparkles, User, Cloud, Sun, Crown, Upload, ChevronDown, BookOpen } from "lucide-react";
import { hasValidConsent } from "./lib/consent";

export default function App() {
  const [isTimerActive, setIsTimerActive] = useState(false);
  const [timerProgress, setTimerProgress] = useState(0);
  const [currentView, setCurrentView] = useState<'main' | 'night'>('main');
  const [showOnboarding, setShowOnboarding] = useState(false);
  const [flareNotification, setFlareNotification] = useState<string | null>(null);
  const [showNarrativeLayer, setShowNarrativeLayer] = useState(false);
  const [showPaywall, setShowPaywall] = useState(false);
  const [activeTab, setActiveTab] = useState("home");
  const [autoStartTimer, setAutoStartTimer] = useState(false);
  const [journalMode, setJournalMode] = useState<'day' | 'evening'>('day');
  const [activeRitual, setActiveRitual] = useState<'palming' | 'barefoot' | 'journal' | 'scrolls' | null>(null);
  const [showPalmingRitual, setShowPalmingRitual] = useState(false);
  const [showPostGazeRitual, setShowPostGazeRitual] = useState(false);
  const [nightActivity, setNightActivity] = useState<'candle' | 'journal' | 'meditation' | null>(null);
  const [learnSection, setLearnSection] = useState<'main' | 'guide' | 'content' | 'unlocks'>('main');

  // Simplified state management - no complex subscription hook
  const loading = false;
  const isPremium = true;
  const isFounder = true;
  const hasAccess = () => true;

  // Check consent and show onboarding
  useEffect(() => {
    if (typeof window !== 'undefined') {
      try {
        const hasConsent = hasValidConsent();
        if (!hasConsent) {
          setShowOnboarding(true);
        }
      } catch (error) {
        console.error('Error checking consent:', error);
        setShowOnboarding(true);
      }
    }
  }, []);

  const handleTimerChange = (isActive: boolean, progress: number) => {
    setIsTimerActive(isActive);
    setTimerProgress(progress);
  };

  const handleFlareAction = (action: string, intensity: number) => {
    setFlareNotification(action);
    console.log('Solar Flare Activated:', action, `Intensity: ${intensity}`);
    setTimeout(() => setFlareNotification(null), 3000);
  };

  const handleOnboardingComplete = () => {
    setShowOnboarding(false);
  };

  const handleSungazingComplete = (duration: number) => {
    console.log('Sungazing completed:', duration);
  };

  // Show onboarding if needed
  if (showOnboarding) {
    return <OnboardingScreen onComplete={handleOnboardingComplete} />;
  }

  // Show night mode
  if (currentView === 'night') {
    return (
      <NightMode
        onJournalOpen={(mode) => {
          setJournalMode('evening');
          setCurrentView('main');
        }}
      />
    );
  }

  return (
    <div className="min-h-screen relative overflow-hidden">
      {/* Background */}
      <div 
        className="absolute inset-0 bg-cover bg-center bg-no-repeat"
        style={{
          backgroundImage: 'url(/app-background.jpg)',
        }}
      />
      
      {/* Overlay */}
      <div className="absolute inset-0 bg-gradient-to-br from-blue-50/80 via-orange-50/60 to-yellow-50/70 backdrop-blur-[0.5px]" />
      
      {/* Holographic sun effects */}
      <div className="absolute inset-0 pointer-events-none">
        <div className="absolute top-1/4 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-80 h-80 rounded-full bg-gradient-conic from-orange-200/20 via-yellow-200/30 via-cyan-200/20 to-orange-200/20 animate-spin" 
             style={{ animationDuration: '20s' }} />
        <div className="absolute top-1/4 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-64 h-64 rounded-full bg-gradient-radial from-yellow-300/15 via-orange-300/20 to-transparent animate-pulse" 
             style={{ animationDuration: '4s' }} />
      </div>

      {/* Solar Flare Notification */}
      {flareNotification && (
        <div className="fixed top-20 left-1/2 transform -translate-x-1/2 z-50 bg-gradient-to-r from-orange-500 to-yellow-500 text-white px-6 py-3 rounded-full shadow-[0_8px_32px_rgba(251,146,60,0.4)] backdrop-blur-xl border border-orange-300/30 animate-bounce">
          <div className="flex items-center gap-2">
            <div className="w-2 h-2 bg-white rounded-full animate-pulse" />
            <span className="text-sm font-medium">{flareNotification}</span>
          </div>
        </div>
      )}

      {/* App container */}
      <div className="relative z-10 max-w-sm mx-auto min-h-screen px-6">
        {/* Header */}
        <div className="pt-20 pb-12 text-center">
          <div className="mb-8">
            {/* 44 Circle */}
            <div className="relative inline-flex items-center justify-center mb-6">
              <div className="absolute inset-0 rounded-full bg-gradient-to-r from-yellow-300/20 to-amber-400/20 blur-3xl scale-150" />
              <div className="relative w-28 h-28 rounded-full bg-gradient-to-br from-yellow-400/90 to-amber-500/90 flex items-center justify-center shadow-[0_0_40px_rgba(251,191,36,0.5)] border border-yellow-300/30">
                <span className="text-white text-3xl font-light tracking-wider drop-shadow-lg">44</span>
              </div>
              {/* Orbiting elements */}
              <div className="absolute inset-0 animate-spin" style={{ animationDuration: '15s' }}>
                <div className="w-2 h-2 bg-yellow-400 rounded-full absolute -top-1 left-1/2 transform -translate-x-1/2 shadow-[0_0_10px_rgba(251,191,36,0.8)]" />
                <div className="w-1 h-1 bg-orange-400 rounded-full absolute top-1/2 -right-1 transform -translate-y-1/2 shadow-[0_0_8px_rgba(251,146,60,0.8)]" />
                <div className="w-1.5 h-1.5 bg-amber-400 rounded-full absolute -bottom-1 left-1/2 transform -translate-x-1/2 shadow-[0_0_8px_rgba(245,158,11,0.8)]" />
                <div className="w-1 h-1 bg-yellow-300 rounded-full absolute top-1/2 -left-1 transform -translate-y-1/2 shadow-[0_0_8px_rgba(253,224,71,0.8)]" />
              </div>
            </div>
            
            <h1 className="text-6xl text-white tracking-[0.1em] font-medium mb-3 drop-shadow-[0_4px_20px_rgba(0,0,0,0.8)] shadow-[0_0_40px_rgba(255,255,255,0.6)] filter brightness-110">
              SUNGAZE
            </h1>
            <div className="w-24 h-[1px] bg-gradient-to-r from-transparent via-white/60 to-transparent mx-auto mb-4 shadow-[0_0_8px_rgba(255,255,255,0.4)]" />
          </div>
          
          <div className="bg-black/40 backdrop-blur-md rounded-2xl px-6 py-5 border border-white/30 shadow-2xl">
            <p className="text-white text-sm tracking-[0.15em] font-medium mb-4">
              LIGHT NUTRITION RITUAL
            </p>
            
            <div className="space-y-4">
              <p className="text-white text-base font-medium leading-relaxed tracking-wide">
                Transform sunlight into cellular nourishment through ancient gazing meditation.
              </p>
              <p className="text-white/95 text-sm font-light italic leading-relaxed tracking-wide">
                From 10 seconds to 44 minutes — become a solar being through sacred practice.
              </p>
            </div>
          </div>
        </div>

        {/* Navigation Tabs */}
        <Tabs defaultValue="home" className="mb-12" value={activeTab} onValueChange={setActiveTab}>
          <TabsList className={`grid w-[180%] max-w-none ${isFounder ? 'grid-cols-8' : 'grid-cols-7'} bg-black/60 backdrop-blur-md border border-white/40 mb-12 rounded-3xl px-6 py-4 shadow-2xl gap-2 -mx-[40%]`}>
            <TabsTrigger
              value="gaze"
              className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-orange-400/50 data-[state=active]:to-yellow-400/50 data-[state=active]:text-white data-[state=active]:shadow-[0_8px_25px_rgba(249,115,22,0.4)] data-[state=active]:border-2 data-[state=active]:border-orange-300/80 text-gray-200 hover:text-white flex flex-col items-center gap-1 rounded-xl transition-all duration-300 font-medium py-3 px-4 bg-gradient-to-r from-orange-500/20 to-yellow-500/20 border border-orange-400/30 shadow-[0_4px_15px_rgba(249,115,22,0.2)]"
            >
              <Sun className="w-5 h-5" />
              <span className="text-xs font-semibold">SUNGAZE</span>
            </TabsTrigger>
            <TabsTrigger
              value="home"
              className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-blue-400/40 data-[state=active]:to-purple-400/40 data-[state=active]:text-white data-[state=active]:shadow-[0_4px_20px_rgba(59,130,246,0.3)] data-[state=active]:border data-[state=active]:border-blue-400/60 text-gray-300 hover:text-white flex flex-col items-center gap-1 rounded-xl transition-all duration-300 font-light py-2 px-3"
            >
              <Home className="w-4 h-4" />
              <span className="text-xs">Home</span>
            </TabsTrigger>
            <TabsTrigger
              value="profile"
              className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-blue-400/40 data-[state=active]:to-purple-400/40 data-[state=active]:text-white data-[state=active]:shadow-[0_4px_20px_rgba(59,130,246,0.3)] data-[state=active]:border data-[state=active]:border-blue-400/60 text-gray-300 hover:text-white flex flex-col items-center gap-1 rounded-xl transition-all duration-300 font-light py-2 px-3"
            >
              <User className="w-4 h-4" />
              <span className="text-xs">Profile</span>
            </TabsTrigger>
            <TabsTrigger
              value="learn"
              className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-orange-400/40 data-[state=active]:to-yellow-400/40 data-[state=active]:text-white data-[state=active]:shadow-[0_4px_20px_rgba(249,115,22,0.3)] data-[state=active]:border data-[state=active]:border-orange-400/60 text-gray-300 hover:text-white flex flex-col items-center gap-1 rounded-xl transition-all duration-300 font-light py-2 px-3"
            >
              <BookOpen className="w-4 h-4" />
              <span className="text-xs">Learn</span>
            </TabsTrigger>
            <TabsTrigger
              value="clouds"
              className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-blue-400/40 data-[state=active]:to-purple-400/40 data-[state=active]:text-white data-[state=active]:shadow-[0_4px_20px_rgba(59,130,246,0.3)] data-[state=active]:border data-[state=active]:border-blue-400/60 text-gray-300 hover:text-white flex flex-col items-center gap-1 rounded-xl transition-all duration-300 font-light py-2 px-3"
            >
              <Cloud className="w-4 h-4" />
              <span className="text-xs">Clouds</span>
            </TabsTrigger>
            <TabsTrigger
              value="rituals"
              className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-blue-400/40 data-[state=active]:to-purple-400/40 data-[state=active]:text-white data-[state=active]:shadow-[0_4px_20px_rgba(59,130,246,0.3)] data-[state=active]:border data-[state=active]:border-blue-400/60 text-gray-300 hover:text-white flex flex-col items-center gap-1 rounded-xl transition-all duration-300 font-light py-2 px-3"
            >
              <Sparkles className="w-4 h-4" />
              <span className="text-xs">Rituals</span>
            </TabsTrigger>
            <TabsTrigger
              value="night"
              className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-blue-400/40 data-[state=active]:to-purple-400/40 data-[state=active]:text-white data-[state=active]:shadow-[0_4px_20px_rgba(59,130,246,0.3)] data-[state=active]:border data-[state=active]:border-blue-400/60 text-gray-300 hover:text-white flex flex-col items-center gap-1 rounded-xl transition-all duration-300 font-light py-2 px-3"
            >
              <Sun className="w-4 h-4" />
              <span className="text-xs">Night</span>
            </TabsTrigger>
            {isFounder && (
              <TabsTrigger
                value="upload"
                className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-amber-400/40 data-[state=active]:to-orange-400/40 data-[state=active]:text-white data-[state=active]:shadow-[0_4px_20px_rgba(251,146,60,0.3)] data-[state=active]:border data-[state=active]:border-amber-400/60 text-gray-300 hover:text-white flex flex-col items-center gap-1 rounded-xl transition-all duration-300 font-light py-2 px-3"
              >
                <Upload className="w-4 h-4" />
                <span className="text-xs">Upload</span>
              </TabsTrigger>
            )}
          </TabsList>

          <TabsContent value="home" className="space-y-4">
            <SolarWindow
              onStartGazing={() => {
                setActiveTab("gaze");
                setAutoStartTimer(true);
              }}
            />
            
            <EnhancedSolarLevelCard 
              currentDay={1}
              completedMinutes={0}
            />
            
            {/* Premium Status */}
            <div className="bg-gradient-to-r from-orange-100 to-yellow-100 border border-orange-300 rounded-2xl p-6 text-center shadow-sm">
              <div className="flex items-center justify-center gap-2 mb-2">
                <Crown className="w-5 h-5 text-orange-600" />
                <h3 className="text-gray-900 font-bold">Sacred Access Unlocked</h3>
              </div>
              <p className="text-gray-700 text-sm mb-2">First Witness of the Flame</p>
              <p className="text-orange-600 text-sm font-bold mb-3">Founder #1/444</p>
            </div>

            {/* The Narrative Layer */}
            <div className="bg-gradient-to-r from-amber-900/30 to-orange-900/30 backdrop-blur-md rounded-2xl px-6 py-4 border border-amber-400/30 shadow-2xl mt-6">
              <button 
                onClick={() => setShowNarrativeLayer(!showNarrativeLayer)}
                className="w-full flex items-center justify-between text-left hover:bg-amber-900/20 transition-all duration-300 rounded-xl p-2"
              >
                <div className="flex items-center gap-3">
                  <div className="w-6 h-6 rounded-full bg-gradient-to-r from-amber-400 to-orange-500 flex items-center justify-center">
                    <span className="text-white text-xs">☀</span>
                  </div>
                  <h2 className="text-lg text-amber-200 font-light tracking-wide">
                    The Narrative Layer
                  </h2>
                </div>
                <ChevronDown 
                  className={`w-5 h-5 text-amber-300 transition-transform duration-300 ${showNarrativeLayer ? 'rotate-180' : ''}`} 
                />
              </button>

              {showNarrativeLayer && (
                <div className="mt-6 space-y-4 text-amber-100/90 text-sm leading-relaxed">
                  <p>For thousands of years, yogis and mystics stood at dawn to drink the sun.</p>
                  <p className="text-amber-200 font-medium text-center py-2">
                    This app is not just a timer. It's a rebellion against forgetting. It's a revolution of light.
                  </p>
                </div>
              )}
            </div>
          </TabsContent>

          <TabsContent value="gaze" className="space-y-12">
            <div className="text-center mb-4">
              <div className="bg-black/50 backdrop-blur-md border border-orange-400/50 rounded-2xl p-4 mb-4 shadow-2xl">
                <div className="flex items-center justify-center gap-2 mb-2">
                  <Sun className="w-5 h-5 text-orange-300" />
                  <h2 className="text-lg text-orange-200 font-light">☀️ Direct Sun Gazing</h2>
                </div>
                <p className="text-orange-200/80 text-sm">Ancient light nutrition practice</p>
              </div>
            </div>

            <div className="relative h-80 mb-12">
              <SunVisualization
                isActive={isTimerActive}
                progress={timerProgress}
                onFlareAction={handleFlareAction}
              />
            </div>

            <div className="mb-12">
              <SungazingTimer
                onTimerChange={handleTimerChange}
                onComplete={handleSungazingComplete}
                autoStart={autoStartTimer}
                onAutoStartHandled={() => setAutoStartTimer(false)}
              />
            </div>
          </TabsContent>

          <TabsContent value="clouds" className="space-y-12">
            <div className="text-center mb-4">
              <div className="bg-black/50 backdrop-blur-md border border-blue-400/50 rounded-2xl p-4 mb-4 shadow-2xl">
                <div className="flex items-center justify-center gap-2 mb-2">
                  <Cloud className="w-5 h-5 text-blue-300" />
                  <h2 className="text-lg text-blue-200 font-light">☁️ Cloud-Gazing Mode</h2>
                </div>
                <p className="text-blue-200/80 text-sm">Perfect for beginners or cloudy days</p>
              </div>
            </div>

            <div className="mb-12">
              <CloudGazingTimer
                onTimerChange={handleTimerChange}
                onComplete={() => console.log('Cloud gazing complete')}
              />
            </div>
          </TabsContent>

          <TabsContent value="profile" className="space-y-4">
            <ProfileScreen userId="test-user-1" />
          </TabsContent>

          <TabsContent value="learn" className="space-y-6">
            {learnSection === 'main' && (
              <>
                <div className="text-center mb-6">
                  <div className="bg-gradient-to-r from-orange-500/30 to-yellow-500/30 backdrop-blur-md border border-orange-300/60 rounded-2xl p-6 shadow-2xl">
                    <div className="flex items-center justify-center gap-3 mb-3">
                      <BookOpen className="w-6 h-6 text-orange-200" />
                      <h2 className="text-white text-xl font-bold tracking-wide">Solar Master Learning</h2>
                    </div>
                    <p className="text-white text-base font-medium leading-relaxed">
                      Unlock guided content and advanced techniques
                    </p>
                  </div>
                </div>
                
                <div className="space-y-4">
                  <Button
                    onClick={() => setLearnSection('guide')}
                    className="w-full bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 text-white font-bold py-4 rounded-xl"
                  >
                    👁️ Sungazing Safety Guide
                  </Button>
                  
                  <Button
                    onClick={() => setLearnSection('content')}
                    className="w-full bg-gradient-to-r from-orange-600 to-yellow-600 hover:from-orange-700 hover:to-yellow-700 text-white font-bold py-4 rounded-xl"
                  >
                    📚 Solar Content Library
                  </Button>
                  
                  <Button
                    onClick={() => setLearnSection('unlocks')}
                    className="w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white font-bold py-4 rounded-xl"
                  >
                    🏆 Progress & Unlocks
                  </Button>
                  
                  <div className="bg-gradient-to-r from-amber-900/30 to-orange-900/30 backdrop-blur-md rounded-2xl p-6 border border-amber-400/30">
                    <h3 className="text-amber-200 text-lg font-bold mb-4">Quick Learning Modules</h3>
                    <div className="grid grid-cols-1 gap-3">
                      <div className="bg-white/10 rounded-lg p-3">
                        <p className="text-amber-100 font-semibold text-sm">• Foundation: Solar Gazing Basics</p>
                        <p className="text-amber-200/80 text-xs">Safe practice fundamentals</p>
                      </div>
                      <div className="bg-white/10 rounded-lg p-3">
                        <p className="text-amber-100 font-semibold text-sm">• Intermediate: Light Nutrition</p>
                        <p className="text-amber-200/80 text-xs">Energy absorption techniques</p>
                      </div>
                      <div className="bg-white/10 rounded-lg p-3">
                        <p className="text-amber-100 font-semibold text-sm">• Advanced: Consciousness Expansion</p>
                        <p className="text-amber-200/80 text-xs">Deep meditative states</p>
                      </div>
                      <div className="bg-white/10 rounded-lg p-3">
                        <p className="text-amber-100 font-semibold text-sm">• Master: Sacred Alchemy</p>
                        <p className="text-amber-200/80 text-xs">Transformation practices</p>
                      </div>
                    </div>
                  </div>
                </div>
              </>
            )}
            
            {learnSection === 'guide' && (
              <div className="space-y-4">
                <Button
                  onClick={() => setLearnSection('main')}
                  className="mb-4 bg-gray-600 hover:bg-gray-700 text-white"
                >
                  ← Back to Learning Hub
                </Button>
                <div className="bg-white/10 backdrop-blur-md rounded-2xl p-6">
                  <h3 className="text-white text-lg font-bold mb-4">Sungazing Safety Guide</h3>
                  <div className="text-white/90 space-y-3">
                    <p>• Start with 10 seconds during sunrise/sunset only</p>
                    <p>• Never look at the sun during midday</p>
                    <p>• Stop immediately if you feel discomfort</p>
                    <p>• Practice only when sun appears orange/red</p>
                  </div>
                </div>
              </div>
            )}
            
            {learnSection === 'content' && (
              <div className="space-y-4">
                <Button
                  onClick={() => setLearnSection('main')}
                  className="mb-4 bg-gray-600 hover:bg-gray-700 text-white"
                >
                  ← Back to Learning Hub
                </Button>
                <div className="bg-white/10 backdrop-blur-md rounded-2xl p-6">
                  <h3 className="text-white text-lg font-bold mb-4">Solar Content Library</h3>
                  <div className="text-white/90 space-y-3">
                    <p>• Progressive content unlocks as you advance</p>
                    <p>• Audio guidance and meditation scripts</p>
                    <p>• Advanced techniques for experienced practitioners</p>
                    <p>• Sacred knowledge from ancient traditions</p>
                  </div>
                </div>
              </div>
            )}
            
            {learnSection === 'unlocks' && (
              <div className="space-y-4">
                <Button
                  onClick={() => setLearnSection('main')}
                  className="mb-4 bg-gray-600 hover:bg-gray-700 text-white"
                >
                  ← Back to Learning Hub
                </Button>
                <div className="bg-white/10 backdrop-blur-md rounded-2xl p-6">
                  <h3 className="text-white text-lg font-bold mb-4">Progress & Unlocks</h3>
                  <div className="text-white/90 space-y-3">
                    <p>• Track your daily practice milestones</p>
                    <p>• Unlock new techniques and content</p>
                    <p>• View your solar journey achievements</p>
                    <p>• Access advanced practitioner materials</p>
                  </div>
                </div>
              </div>
            )}
          </TabsContent>

          <TabsContent value="rituals" className="space-y-4">
            {activeRitual === null && (
              <>
                <div className="bg-black/40 backdrop-blur-md rounded-2xl px-6 py-4 border border-white/30 shadow-2xl mb-6">
                  <h2 className="text-lg text-white font-medium text-center">Sacred Rituals</h2>
                </div>
                
                <div className="space-y-4">
                  <Button
                    onClick={() => setActiveRitual('palming')}
                    className="w-full bg-gradient-to-r from-orange-600 to-yellow-600 hover:from-orange-700 hover:to-yellow-700 text-white font-bold py-4 rounded-xl"
                  >
                    ○ Solar Palming (3-5 minutes)
                  </Button>
                  
                  <Button
                    onClick={() => setActiveRitual('barefoot')}
                    className="w-full bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white font-bold py-4 rounded-xl"
                  >
                    🦶 Barefoot Grounding (10-44 minutes)
                  </Button>
                  
                  <Button
                    onClick={() => setActiveRitual('journal')}
                    className="w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white font-bold py-4 rounded-xl"
                  >
                    📖 Solar Journal & Reflection
                  </Button>
                  
                  {isPremium && (
                    <Button
                      onClick={() => setActiveRitual('scrolls')}
                      className="w-full bg-gradient-to-r from-amber-600 to-orange-600 hover:from-amber-700 hover:to-orange-700 text-white font-bold py-4 rounded-xl border-2 border-amber-400/50"
                    >
                      📜 Truth Scrolls (Premium)
                    </Button>
                  )}
                </div>
              </>
            )}
            
            {activeRitual === 'palming' && (
              <RitualTimer
                ritualType="palming"
                onComplete={() => setActiveRitual(null)}
                onBack={() => setActiveRitual(null)}
              />
            )}
            
            {activeRitual === 'barefoot' && (
              <RitualTimer
                ritualType="barefoot"
                onComplete={() => setActiveRitual(null)}
                onBack={() => setActiveRitual(null)}
              />
            )}
            
            {activeRitual === 'journal' && (
              <div className="space-y-4">
                <Button
                  onClick={() => setActiveRitual(null)}
                  className="mb-4 bg-gray-600 hover:bg-gray-700 text-white"
                >
                  ← Back to Rituals
                </Button>
                <SolarJournal mode={journalMode} onClose={() => setActiveRitual(null)} />
              </div>
            )}
            
            {activeRitual === 'scrolls' && (
              <div className="space-y-4">
                <Button
                  onClick={() => setActiveRitual(null)}
                  className="mb-4 bg-gray-600 hover:bg-gray-700 text-white"
                >
                  ← Back to Rituals
                </Button>
                <TruthScrollsNew />
              </div>
            )}
          </TabsContent>

          <TabsContent value="night" className="space-y-4">
            {nightActivity === null && (
              <>
                <div className="text-center mb-4">
                  <div className="bg-black/50 backdrop-blur-md border border-indigo-400/50 rounded-2xl p-4 mb-4 shadow-2xl">
                    <div className="flex items-center justify-center gap-2 mb-2">
                      <Sun className="w-5 h-5 text-indigo-300" />
                      <h2 className="text-lg text-indigo-200 font-light">🌙 Night Practice</h2>
                    </div>
                    <p className="text-indigo-200/80 text-sm">Evening reflection and preparation</p>
                  </div>
                </div>

                <div className="space-y-4">
                  <Button
                    onClick={() => setNightActivity('candle')}
                    className="w-full bg-gradient-to-r from-orange-600 to-red-600 hover:from-orange-700 hover:to-red-700 text-white font-bold py-4 rounded-xl"
                  >
                    🕯️ Candle Gazing (Trataka)
                  </Button>
                  
                  <Button
                    onClick={() => setNightActivity('journal')}
                    className="w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white font-bold py-4 rounded-xl"
                  >
                    📖 Evening Reflection Journal
                  </Button>
                  
                  <Button
                    onClick={() => setNightActivity('meditation')}
                    className="w-full bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white font-bold py-4 rounded-xl"
                  >
                    🌙 Guided Sleep Meditation
                  </Button>
                  
                  <Button
                    onClick={() => setCurrentView('night')}
                    className="w-full bg-gradient-to-r from-gray-600 to-gray-800 hover:from-gray-700 hover:to-gray-900 text-white font-bold py-3 rounded-xl border-2 border-indigo-400/30"
                  >
                    ✨ Enter Full Night Mode
                  </Button>
                </div>
              </>
            )}
            
            {nightActivity === 'candle' && (
              <div className="space-y-4">
                <Button
                  onClick={() => setNightActivity(null)}
                  className="mb-4 bg-gray-600 hover:bg-gray-700 text-white"
                >
                  ← Back to Night Options
                </Button>
                <div className="bg-gradient-to-br from-orange-900/30 to-red-900/30 backdrop-blur-md rounded-2xl p-6 border border-orange-400/30">
                  <h3 className="text-orange-200 text-xl font-bold mb-4 text-center">🕯️ Candle Gazing (Trataka)</h3>
                  <p className="text-orange-100 text-sm mb-6 text-center leading-relaxed">
                    Light a candle and gaze softly at the flame. This ancient yogic practice purifies the eyes and calms the mind for sleep.
                  </p>
                  <CandleGazingMode 
                    isActive={true}
                    duration={600}
                    onComplete={() => setNightActivity(null)}
                  />
                </div>
              </div>
            )}
            
            {nightActivity === 'journal' && (
              <div className="space-y-4">
                <Button
                  onClick={() => setNightActivity(null)}
                  className="mb-4 bg-gray-600 hover:bg-gray-700 text-white"
                >
                  ← Back to Night Options
                </Button>
                <SolarJournal mode="evening" onClose={() => setNightActivity(null)} />
              </div>
            )}
            
            {nightActivity === 'meditation' && (
              <div className="space-y-4">
                <Button
                  onClick={() => setNightActivity(null)}
                  className="mb-4 bg-gray-600 hover:bg-gray-700 text-white"
                >
                  ← Back to Night Options
                </Button>
                <div className="bg-gradient-to-br from-indigo-900/30 to-purple-900/30 backdrop-blur-md rounded-2xl p-6 border border-indigo-400/30">
                  <h3 className="text-indigo-200 text-xl font-bold mb-4 text-center">🌙 Sleep Meditation</h3>
                  <p className="text-indigo-100 text-sm mb-6 text-center leading-relaxed">
                    A guided meditation to prepare your consciousness for restorative sleep and prophetic dreams.
                  </p>
                  <div className="text-center">
                    <Button className="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-3 px-6 rounded-xl">
                      ▶️ Begin Meditation
                    </Button>
                  </div>
                </div>
              </div>
            )}
          </TabsContent>

          {isFounder && (
            <TabsContent value="upload" className="space-y-4">
              <div className="bg-gradient-to-r from-amber-900/40 to-orange-900/40 backdrop-blur-md rounded-2xl px-6 py-4 border border-amber-400/30 shadow-2xl mb-6">
                <div className="flex items-center justify-center gap-2 mb-2">
                  <Upload className="w-5 h-5 text-amber-300" />
                  <h2 className="text-lg text-amber-200 font-light">🔥 Founder Voice Upload</h2>
                </div>
                <p className="text-amber-200/80 text-sm text-center">
                  Upload your personal meditation recordings
                </p>
              </div>

              <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6 shadow-lg">
                <p className="text-white text-center">
                  🏆 Founder Exclusive Feature
                </p>
              </div>
            </TabsContent>
          )}
        </Tabs>

        <div className="h-16" />
      </div>

      {/* Palming Ritual Modal */}
      {showPalmingRitual && (
        <div className="fixed inset-0 z-50 bg-black/90 flex items-center justify-center p-4">
          <PalmingRitual
            onComplete={() => {
              setShowPalmingRitual(false);
              setShowPostGazeRitual(true);
            }}
            onClose={() => setShowPalmingRitual(false)}
          />
        </div>
      )}

      {/* Post-Gaze Ritual Modal */}
      {showPostGazeRitual && (
        <div className="fixed inset-0 z-50 bg-black/90 flex items-center justify-center p-4">
          <PostGazeRitual
            onComplete={() => setShowPostGazeRitual(false)}
            onClose={() => setShowPostGazeRitual(false)}
          />
        </div>
      )}

      {/* PaywallModal */}
      <PaywallModal
        isOpen={showPaywall}
        onClose={() => setShowPaywall(false)}
        userId="test-user-1"
        email="user@sun44.com"
        onSuccess={() => {
          console.log('Payment successful!');
          setShowPaywall(false);
        }}
      />
    </div>
  );
}