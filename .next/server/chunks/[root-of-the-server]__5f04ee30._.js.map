{"version":3,"sources":["turbopack:///[project]/SUNGAZE APP/package.json/src/app/lib/founder-tracker.ts","turbopack:///[project]/SUNGAZE APP/package.json/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/SUNGAZE APP/package.json/src/app/api/founders/stats/route.ts"],"sourcesContent":["// Founder tracking system for accurate counts and founder management\n\nexport interface FounderInfo {\n  id: string;\n  founderNumber: number; // 1-444\n  email: string;\n  name?: string;\n  purchaseDate: string;\n  stripeCustomerId?: string;\n  stripePaymentId?: string;\n  region: 'us' | 'africa' | 'europe' | 'asia' | 'other';\n  ritualEmail?: string; // Email they provided for ritual access\n  status: 'active' | 'refunded';\n}\n\nclass FounderTracker {\n  private founders = new Map<string, FounderInfo>();\n  private foundersByNumber = new Map<number, FounderInfo>();\n  private nextFounderNumber = 1;\n  private readonly MAX_FOUNDERS = 444;\n\n  constructor() {\n    this.initializeFounders();\n  }\n\n  private initializeFounders() {\n    // Initialize with you as the first founder\n    const firstFounder: FounderInfo = {\n      id: 'test-user-1', // Your user ID\n      founderNumber: 1,\n      email: 'test@sungaze.com', // Founder #1 email\n      name: 'Founder #1',\n      purchaseDate: new Date().toISOString(),\n      region: 'us',\n      status: 'active'\n    };\n    \n    this.founders.set('test-user-1', firstFounder);\n    this.foundersByNumber.set(1, firstFounder);\n    this.nextFounderNumber = 2;\n    \n    console.log('Initialized founder system with Founder #1');\n  }\n\n  // Register a new founder (called after successful payment)\n  async registerFounder(userId: string, email: string, paymentInfo: {\n    stripeCustomerId?: string;\n    stripePaymentId?: string;\n    region?: string;\n  }): Promise<{ success: boolean; founderNumber?: number; error?: string }> {\n    \n    // Check if already a founder\n    if (this.founders.has(userId)) {\n      const existing = this.founders.get(userId)!;\n      return { success: true, founderNumber: existing.founderNumber };\n    }\n\n    // Check if we've reached the limit\n    if (this.nextFounderNumber > this.MAX_FOUNDERS) {\n      return { \n        success: false, \n        error: 'All 444 Founder spots have been claimed worldwide!' \n      };\n    }\n\n    // Create new founder\n    const founderNumber = this.nextFounderNumber;\n    const newFounder: FounderInfo = {\n      id: userId,\n      founderNumber,\n      email,\n      purchaseDate: new Date().toISOString(),\n      region: (paymentInfo.region as any) || 'us',\n      stripeCustomerId: paymentInfo.stripeCustomerId,\n      stripePaymentId: paymentInfo.stripePaymentId,\n      status: 'active'\n    };\n\n    // Store founder\n    this.founders.set(userId, newFounder);\n    this.foundersByNumber.set(founderNumber, newFounder);\n    this.nextFounderNumber++;\n\n    console.log(`New Founder #${founderNumber} registered:`, newFounder);\n    \n    // Save to persistent storage (in production, this would be a database)\n    this.saveToStorage();\n    \n    return { success: true, founderNumber };\n  }\n\n  // Get founder info by user ID\n  getFounder(userId: string): FounderInfo | null {\n    return this.founders.get(userId) || null;\n  }\n\n  // Get founder by number\n  getFounderByNumber(founderNumber: number): FounderInfo | null {\n    return this.foundersByNumber.get(founderNumber) || null;\n  }\n\n  // Get current founder stats\n  getFounderStats() {\n    const totalClaimed = this.founders.size;\n    const remaining = this.MAX_FOUNDERS - totalClaimed;\n    \n    return {\n      totalClaimed,\n      remaining: Math.max(0, remaining),\n      maxFounders: this.MAX_FOUNDERS,\n      nextFounderNumber: this.nextFounderNumber <= this.MAX_FOUNDERS ? this.nextFounderNumber : null,\n      isFullySubscribed: totalClaimed >= this.MAX_FOUNDERS\n    };\n  }\n\n  // Get all founders (for admin purposes)\n  getAllFounders(): FounderInfo[] {\n    return Array.from(this.founders.values()).sort((a, b) => a.founderNumber - b.founderNumber);\n  }\n\n  // Get founders with ritual emails (who can be contacted)\n  getFoundersWithRitualEmails(): FounderInfo[] {\n    return this.getAllFounders().filter(f => f.ritualEmail && f.status === 'active');\n  }\n\n  // Update founder's ritual email\n  updateFounderRitualEmail(userId: string, ritualEmail: string): boolean {\n    const founder = this.founders.get(userId);\n    if (founder) {\n      founder.ritualEmail = ritualEmail;\n      this.saveToStorage();\n      return true;\n    }\n    return false;\n  }\n\n  // Export founder data for admin\n  exportFounderData() {\n    const founders = this.getAllFounders();\n    const stats = this.getFounderStats();\n    \n    return {\n      summary: stats,\n      founders: founders.map(f => ({\n        founderNumber: f.founderNumber,\n        email: f.email,\n        ritualEmail: f.ritualEmail || 'Not provided',\n        purchaseDate: f.purchaseDate,\n        region: f.region,\n        status: f.status\n      }))\n    };\n  }\n\n  // Save to localStorage (in production, use proper database)\n  private saveToStorage() {\n    if (typeof window === 'undefined') return;\n    \n    try {\n      const data = {\n        founders: Array.from(this.founders.entries()),\n        foundersByNumber: Array.from(this.foundersByNumber.entries()),\n        nextFounderNumber: this.nextFounderNumber\n      };\n      localStorage.setItem('sungaze_founders', JSON.stringify(data));\n    } catch (error) {\n      console.error('Failed to save founder data:', error);\n    }\n  }\n\n  // Load from localStorage (in production, load from database)\n  private loadFromStorage() {\n    if (typeof window === 'undefined') return;\n    \n    try {\n      const stored = localStorage.getItem('sungaze_founders');\n      if (stored) {\n        const data = JSON.parse(stored);\n        this.founders = new Map(data.founders);\n        this.foundersByNumber = new Map(data.foundersByNumber);\n        this.nextFounderNumber = data.nextFounderNumber;\n      }\n    } catch (error) {\n      console.error('Failed to load founder data:', error);\n    }\n  }\n}\n\n// Export singleton instance\nexport const founderTracker = new FounderTracker();","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/founders/stats/route\",\n        pathname: \"/api/founders/stats\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/SUNGAZE APP/package.json/src/app/api/founders/stats/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/founders/stats/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","import { NextResponse } from 'next/server';\nimport { founderTracker } from '../../../lib/founder-tracker';\n\nexport async function GET() {\n  try {\n    const stats = founderTracker.getFounderStats();\n    \n    return NextResponse.json({\n      success: true,\n      data: {\n        totalClaimed: stats.totalClaimed,\n        remaining: stats.remaining,\n        maxFounders: stats.maxFounders,\n        isFullySubscribed: stats.isFullySubscribed,\n        percentageClaimed: Math.round((stats.totalClaimed / stats.maxFounders) * 100)\n      }\n    });\n  } catch (error) {\n    console.error('Error getting founder stats:', error);\n    return NextResponse.json(\n      { success: false, error: 'Failed to get founder stats' },\n      { status: 500 }\n    );\n  }\n}\n\n// Export founder data (admin only - add auth in production)\nexport async function POST() {\n  try {\n    const exportData = founderTracker.exportFounderData();\n    \n    return NextResponse.json({\n      success: true,\n      data: exportData\n    });\n  } catch (error) {\n    console.error('Error exporting founder data:', error);\n    return NextResponse.json(\n      { success: false, error: 'Failed to export founder data' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":"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","ignoreList":[1]}