{"version":3,"sources":["turbopack:///[project]/SUNGAZE APP/package.json/src/app/lib/secrets-vault.ts","turbopack:///[project]/SUNGAZE APP/package.json/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/SUNGAZE APP/package.json/src/app/api/sun44-oracle/route.ts"],"sourcesContent":["// Server-side Secrets Vault\n// Secure storage and retrieval of API keys and sensitive configuration\n\nimport { createHash, createCipheriv, createDecipheriv, randomBytes } from 'crypto';\n\n// Simple in-memory store (in production, you'd use a database)\ninterface SecretEntry {\n  key: string;\n  value: string;\n  encrypted: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nclass SecretsVault {\n  private static instance: SecretsVault;\n  private secrets: Map<string, SecretEntry> = new Map();\n  private encryptionKey: string;\n\n  private constructor() {\n    // In production, this would be a proper master key\n    this.encryptionKey = process.env.SECRETS_MASTER_KEY || 'sungaze-default-key-change-in-prod';\n    this.initializeDefaults();\n  }\n\n  public static getInstance(): SecretsVault {\n    if (!SecretsVault.instance) {\n      SecretsVault.instance = new SecretsVault();\n    }\n    return SecretsVault.instance;\n  }\n\n  private initializeDefaults() {\n    // Migrate existing environment variables\n    const envKeys = [\n      'OPENAI_API_KEY',\n      'STRIPE_SECRET_KEY',\n      'STRIPE_WEBHOOK_SECRET',\n      'NEXT_PUBLIC_ELEVENLABS_API_KEY',\n      'NEXT_PUBLIC_ELEVENLABS_VOICE_ID'\n    ];\n\n    envKeys.forEach(key => {\n      const value = process.env[key];\n      if (value && !this.secrets.has(key)) {\n        this.setSecret(key, value);\n      }\n    });\n  }\n\n  private encrypt(text: string): string {\n    const iv = randomBytes(16);\n    const key = createHash('sha256').update(this.encryptionKey).digest();\n    const cipher = createCipheriv('aes-256-cbc', key, iv);\n    let encrypted = cipher.update(text, 'utf8', 'hex');\n    encrypted += cipher.final('hex');\n    return iv.toString('hex') + ':' + encrypted;\n  }\n\n  private decrypt(encryptedText: string): string {\n    const [ivHex, encrypted] = encryptedText.split(':');\n    const iv = Buffer.from(ivHex, 'hex');\n    const key = createHash('sha256').update(this.encryptionKey).digest();\n    const decipher = createDecipheriv('aes-256-cbc', key, iv);\n    let decrypted = decipher.update(encrypted, 'hex', 'utf8');\n    decrypted += decipher.final('utf8');\n    return decrypted;\n  }\n\n  public async setSecret(key: string, value: string, encrypt: boolean = true): Promise<void> {\n    const secretEntry: SecretEntry = {\n      key,\n      value: encrypt ? this.encrypt(value) : value,\n      encrypted: encrypt,\n      createdAt: this.secrets.has(key) ? this.secrets.get(key)!.createdAt : new Date(),\n      updatedAt: new Date()\n    };\n\n    this.secrets.set(key, secretEntry);\n    console.log(`Secret ${key} ${this.secrets.has(key) ? 'updated' : 'stored'} securely`);\n  }\n\n  public async getSecret(key: string): Promise<string | null> {\n    const secret = this.secrets.get(key);\n    if (!secret) {\n      console.warn(`Secret ${key} not found`);\n      return null;\n    }\n\n    return secret.encrypted ? this.decrypt(secret.value) : secret.value;\n  }\n\n  public async deleteSecret(key: string): Promise<boolean> {\n    const deleted = this.secrets.delete(key);\n    if (deleted) {\n      console.log(`Secret ${key} deleted`);\n    }\n    return deleted;\n  }\n\n  public listSecretKeys(): string[] {\n    return Array.from(this.secrets.keys());\n  }\n\n  public getSecretInfo(key: string): Omit<SecretEntry, 'value'> | null {\n    const secret = this.secrets.get(key);\n    if (!secret) return null;\n\n    return {\n      key: secret.key,\n      encrypted: secret.encrypted,\n      createdAt: secret.createdAt,\n      updatedAt: secret.updatedAt\n    };\n  }\n\n  public async rotateSecret(key: string, newValue: string): Promise<void> {\n    if (!this.secrets.has(key)) {\n      throw new Error(`Secret ${key} does not exist`);\n    }\n    \n    await this.setSecret(key, newValue);\n    console.log(`Secret ${key} rotated successfully`);\n  }\n}\n\n// Singleton instance\nconst vault = SecretsVault.getInstance();\n\n// Public API\nexport const getSecret = (key: string): Promise<string | null> => vault.getSecret(key);\nexport const setSecret = (key: string, value: string, encrypt?: boolean): Promise<void> => vault.setSecret(key, value, encrypt);\nexport const deleteSecret = (key: string): Promise<boolean> => vault.deleteSecret(key);\nexport const rotateSecret = (key: string, newValue: string): Promise<void> => vault.rotateSecret(key, newValue);\nexport const listSecrets = (): string[] => vault.listSecretKeys();\nexport const getSecretInfo = (key: string) => vault.getSecretInfo(key);\n\n// Server-only exports\nexport { SecretsVault };","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/sun44-oracle/route\",\n        pathname: \"/api/sun44-oracle\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/SUNGAZE APP/package.json/src/app/api/sun44-oracle/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/sun44-oracle/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","import { NextRequest, NextResponse } from 'next/server';\nimport { getSecret } from '../../lib/secrets-vault';\n\ninterface OracleRequest {\n  question: string;\n  sessionType: 'general' | 'practice' | 'vision' | 'spiritual' | 'health';\n  userLevel?: number;\n  systemPrompt: string;\n  config: {\n    maxTokens: number;\n    temperature: number;\n  };\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { question, sessionType, userLevel, systemPrompt, config }: OracleRequest = await request.json();\n\n    console.log('Sun 44 Oracle Query:', {\n      question: question.substring(0, 100) + '...',\n      sessionType,\n      userLevel\n    });\n\n    const apiKey = await getSecret('OPENAI_API_KEY');\n    if (!apiKey) {\n      throw new Error('OpenAI API key not configured in secrets vault');\n    }\n\n    // OpenAI API call\n    const openAIResponse = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${apiKey}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'gpt-4o-mini',\n        messages: [\n          {\n            role: 'system',\n            content: systemPrompt\n          },\n          {\n            role: 'user',\n            content: question\n          }\n        ],\n        max_tokens: config.maxTokens,\n        temperature: config.temperature,\n        presence_penalty: 0.1,\n        frequency_penalty: 0.1\n      }),\n    });\n\n    if (!openAIResponse.ok) {\n      const errorData = await openAIResponse.json();\n      console.error('OpenAI API error:', errorData);\n      throw new Error(`OpenAI API error: ${openAIResponse.status}`);\n    }\n\n    const data = await openAIResponse.json();\n    const response = data.choices[0]?.message?.content?.trim();\n\n    if (!response) {\n      throw new Error('Empty response from OpenAI');\n    }\n\n    console.log('Sun 44 Oracle Response:', response.substring(0, 100) + '...');\n\n    return NextResponse.json({ \n      response,\n      sessionType,\n      userLevel,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('Sun 44 Oracle API error:', error);\n    \n    return NextResponse.json(\n      { \n        error: 'Oracle unavailable', \n        message: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":"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","ignoreList":[1]}